---
apiVersion: spaces.tanzu.vmware.com/v1alpha1
kind: Profile
metadata:
  name: spring-prod.tanzu.vmware.com
spec:
  description: >
    Installs Spring Cloud Gateway, Config Server and Service Registry as available application infrastructure for your cloud native application architecture.
    With Spring Cloud profile, you can take advantage of our self-service, enterprise API gateway, configuration delivered at runtime and enhanced service discovery for all Spring applications deployed to the space.
  requiredCapabilities:
    - name: application-configuration-service.tanzu.vmware.com
    - name: service-registry.spring.tanzu.vmware.com
    - name: spring-cloud-gateway.tanzu.vmware.com
    - name: bitnami.services.tanzu.vmware.com
    - name: container-app.tanzu.vmware.com
  traits:
    - name: application-configuration-service-trait
      alias: application-configuration-service-trait
    - name: service-registry-trait
      alias: service-registry-trait
    - name: spring-cloud-gateway-trait
      alias: spring-cloud-gateway-trait
      values:
        inline:
          count: 2
          bindings:
            redis:
              #! Must be provided externally for multi-region setup https://docs.vmware.com/en/VMware-Spring-Cloud-Gateway-for-Kubernetes/2.1/scg-k8s/GUID-guides-redis.html
              secret: redis-binding-secret
    - name: public-ingress
      alias: public-ingress
    - name: mtls.tanzu.vmware.com
      alias: mtls.tanzu.vmware.com
    - name: observability-trait
      alias: observability-trait
    - name: selfsigned-certificate-issuer
      alias: selfsigned-certificate-issuer
    - name: egress
      alias: egress
    - name: workload-installer
      alias: workload-installer
      values:
        inline:
          workload-installer.tanzu.vmware.com:
            #! Service account name to be created and granted permissions, associating it with RBAC rules for server workloads.
            serviceAccountName: workload-installer
          workload-imagepull-secret.tanzu.vmware.com:
            #! name of ImagePullSecret to be associated with workload serviceAccount.
            secretName: workload-imagepull-secret
            #! Service account used for running the workload.
            serviceAccountName: default